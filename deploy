#!/usr/bin/env bash
# deploy.sh — dot-file bootstrapper for a Linux desktop
# Caleb “Logic Nebraska” Bennett — 2025-06-10

set -euo pipefail

# ──────────────── fancy colours ────────────────
NC='\033[0m'   # reset / normal
GRN='\033[0;32m'
BLU='\033[0;34m'
RED='\033[0;31m'
YEL='\033[1;33m'

say()   { printf "${BLU}%s${NC}\n"  "$1"; }
good()  { printf "${GRN}✔ %s${NC}\n" "$1"; }
warn()  { printf "${YEL}⚠ %s${NC}\n" "$1"; }
error() { printf "${RED}✖ %s${NC}\n" "$1"; }

# ───────── detect package manager ──────────────
detect_pm() {
  if   command -v apt >/dev/null     ; then PM_CMD="sudo apt -y install"
  elif command -v pacman >/dev/null  ; then PM_CMD="sudo pacman -S --noconfirm"
  elif command -v dnf >/dev/null     ; then PM_CMD="sudo dnf -y install"
  elif command -v brew >/dev/null    ; then PM_CMD="brew install"
  elif command -v pkg >/dev/null     ; then PM_CMD="sudo pkg install -y"
  else
    error "Could not detect a supported package manager. Please install packages manually."
    exit 1
  fi
  good "Using package manager: ${PM_CMD%% *}"
}

# ───────── helpers ─────────────────────────────
prompt_yes() {
  read -rp "$(printf "${BLU}%s (y/N) ${NC}" "$1")" ans
  [[ "${ans,,}" == y* ]]
}

install_if_missing() {
  local pkg=$1
  if ! command -v "$pkg" >/dev/null 2>&1; then
    warn "$pkg not found."
    if prompt_yes "Install $pkg?"; then
      $PM_CMD "$pkg"
      good "$pkg installed."
    else
      error "$pkg is required. Aborting."
      exit 1
    fi
  else
    good "$pkg already present."
  fi
}

backup_dot() {
  local file=$1
  [[ -f $file || -h $file ]] || return       # nothing to back up
  local ts
  ts=$(date +%Y%m%d_%H%M%S)
  mv "$file" "${file}.bak_${ts}"
  good "Backed up $file → ${file}.bak_${ts}"
}

# ───────── main ────────────────────────────────
say "🚀  Welcome to the dot-file deploy script!"

detect_pm

REQUIRED_PKGS=( zsh neovim tmux git yt-dlp )

say "🔎  Checking required software…"
for p in "${REQUIRED_PKGS[@]}"; do install_if_missing "$p"; done

# ─ default shell ───────────────────────────────
if [[ $SHELL != *zsh ]]; then
  if prompt_yes "Switch default shell to zsh?"; then
    chsh -s "$(command -v zsh)"
    good "Default shell changed to zsh (takes effect next login)."
  else
    warn "Not switching shells — some config may misbehave."
  fi
else
  good "Default shell already zsh."
fi

# ─ dot-file paths ──────────────────────────────
DOTFILES_DIR="$HOME/dotfiles"

say "🗂  Backing up existing dot-files & creating symlinks…"
backup_dot ~/.zshrc
backup_dot ~/.zprofile
backup_dot ~/.tmux.conf
backup_dot ~/.config/nvim/init.vim
backup_dot ~/.config/nvim/init.lua

mkdir -p ~/.config/nvim ~/.local/share/fonts ~/.local/bin

ln -sf "$DOTFILES_DIR/zsh/zshrc_manager.sh" ~/.zshrc
ln -sf "$DOTFILES_DIR/zsh/zprofile"         ~/.zprofile
ln -sf "$DOTFILES_DIR/tmux/tmux.conf"       ~/.tmux.conf

# Neovim config
ln -sf "$DOTFILES_DIR/vim/vimrc.vim"        ~/.config/nvim/init.vim

# ─ sanity-check ~/.zshrc ───────────────────────
if [[ ! -s ~/.zshrc ]]; then
  warn "~/.zshrc symlink missing or empty – creating fallback stub."
  cat <<'EOF' > ~/.zshrc
# Fallback .zshrc – generated by deploy.sh
echo "⚠  dotfiles/zsh/zshrc_manager.sh not found – using minimal fallback."
export PATH="$HOME/.local/bin:$PATH"
EOF
fi

# ─ yt-dlp config mirroring ─────────────────────
mkdir -p ~/.config
ln -snf "$DOTFILES_DIR/youtube-dl" ~/.config/youtube-dl  # canonical home

mkdir -p ~/.config/yt-dlp
if command -v rsync >/dev/null 2>&1; then
  rsync -a --delete ~/.config/youtube-dl/ ~/.config/yt-dlp/
else
  rm -rf ~/.config/yt-dlp/*
  cp -r ~/.config/youtube-dl/* ~/.config/yt-dlp/
fi
good "Synced youtube-dl settings into yt-dlp."

# ─ extras (fonts, local bin) ───────────────────
ln -snf "$DOTFILES_DIR/local/bin" ~/.local/bin
ln -snf "$DOTFILES_DIR/fonts"     ~/.local/share/

fc-cache -f >/dev/null || true

# Git identity (customise if needed)
git config --global user.name  "Caleb Bennett"
git config --global user.email "cbennett68864@gmail.com"

say "🎉  All set! Log out & back in (or run \`exec zsh\`) to enjoy your new setup."
